"""
–ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –ø–µ—Ä–µ–≤–æ–¥–∞ –±–µ–∑ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
"""
from pathlib import Path
from src.transcriber import Transcriber
from src.translator import Translator
from src.document_writer import DocumentWriter
from src.logger import logger
from src.utils import detect_language
import sys

print("=" * 70)
print("üé¨ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –¢–†–ê–ù–°–ö–†–ò–ë–ò–†–û–í–ê–ù–ò–Ø –ò –ü–ï–†–ï–í–û–î–ê")
print("=" * 70)

# ============================================================================
# –ù–ê–°–¢–†–û–ô–ö–ò
# ============================================================================

# –ü—É—Ç—å –∫ –∞—É–¥–∏–æ—Ñ–∞–π–ª—É
AUDIO_FILE = "temp/test.mp3"  # –ò–ª–∏ test_10s.mp3 –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∞

# –ú–µ—Ç–æ–¥—ã
TRANSCRIBE_METHOD = "whisper_base"
TRANSLATE_METHOD = "NLLB"

# –°–æ–∑–¥–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã?
CREATE_DOCUMENTS = True

# ============================================================================
# –ü–†–û–í–ï–†–ö–ò
# ============================================================================

audio_path = Path(AUDIO_FILE)

if not audio_path.exists():
    print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {audio_path}")
    print("\nüí° –°–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª:")
    print("   ffmpeg -i temp/Rick_Astley*.mp3 -t 10 temp/test.mp3")
    print("\n–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª–Ω—ã–π —Ñ–∞–π–ª:")
    print("   AUDIO_FILE = 'temp/Rick_Astley_-_Never_Gonna_Give_You_Up_(Official_Video)_(4K_Remaster).mp3'")
    sys.exit(1)

print(f"‚úÖ –§–∞–π–ª –Ω–∞–π–¥–µ–Ω: {audio_path}")
print(f"üìè –†–∞–∑–º–µ—Ä: {audio_path.stat().st_size / 1024 / 1024:.2f} MB")
print()

# ============================================================================
# –®–ê–ì 1: –¢–†–ê–ù–°–ö–†–ò–ë–ò–†–û–í–ê–ù–ò–ï
# ============================================================================

print("=" * 70)
print("üìù –®–ê–ì 1: –¢–†–ê–ù–°–ö–†–ò–ë–ò–†–û–í–ê–ù–ò–ï")
print("=" * 70)

print(f"–ú–µ—Ç–æ–¥: {TRANSCRIBE_METHOD}")
print("–ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ Whisper...")

transcriber = Transcriber(method=TRANSCRIBE_METHOD)

print(f"–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: {transcriber.device}")
print("–ù–∞—á–∏–Ω–∞–µ–º —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä–æ–≤–∞–Ω–∏–µ...\n")

segments = transcriber.transcribe(
    audio_path,
    language=None,  # –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
    with_speakers=False
)

print(f"\n‚úÖ –¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
print(f"   –°–æ–∑–¥–∞–Ω–æ —Å–µ–≥–º–µ–Ω—Ç–æ–≤: {len(segments)}")

# –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç
original_text = transcriber.segments_to_text(segments)
original_text_with_timestamps = transcriber.segments_to_text_with_timestamps(segments)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫
detected_lang = detect_language(original_text)
print(f"   –û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —è–∑—ã–∫: {detected_lang}")

# –í—ã–≤–æ–¥–∏–º –ø–µ—Ä–≤—ã–µ 3 —Å–µ–≥–º–µ–Ω—Ç–∞
print("\nüìÑ –ü–µ—Ä–≤—ã–µ 3 —Å–µ–≥–º–µ–Ω—Ç–∞:")
print("-" * 70)
for seg in segments[:3]:
    print(f"[{seg.start:6.1f}s - {seg.end:6.1f}s] {seg.text}")

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
total_duration = segments[-1].end if segments else 0
word_count = len(original_text.split())
print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏:")
print(f"   –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {total_duration:.1f} —Å–µ–∫—É–Ω–¥")
print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤: {word_count}")
print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤: {len(original_text)}")

# ============================================================================
# –®–ê–ì 2: –ü–ï–†–ï–í–û–î
# ============================================================================

print("\n" + "=" * 70)
print("üåç –®–ê–ì 2: –ü–ï–†–ï–í–û–î")
print("=" * 70)

if detected_lang == "ru":
    print("‚ö†Ô∏è  –¢–µ–∫—Å—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –ø–µ—Ä–µ–≤–æ–¥ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
    translation_segments = None
    translated_text = None
    translated_text_with_timestamps = None
else:
    print(f"–ú–µ—Ç–æ–¥: {TRANSLATE_METHOD}")
    print(f"–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {detected_lang} ‚Üí ru")
    print("–ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ NLLB...")
    
    translator = Translator(method=TRANSLATE_METHOD)
    
    print("–ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥...\n")
    
    # –ü–µ—Ä–µ–≤–æ–¥–∏–º —Å–µ–≥–º–µ–Ω—Ç—ã
    translation_segments = translator.translate_segments(
        segments,
        source_lang=detected_lang,
        target_lang="ru"
    )
    
    print(f"\n‚úÖ –ü–µ—Ä–µ–≤–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω!")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
    translated_text = transcriber.segments_to_text(translation_segments)
    translated_text_with_timestamps = transcriber.segments_to_text_with_timestamps(
        translation_segments
    )
    
    # –í—ã–≤–æ–¥–∏–º –ø–µ—Ä–≤—ã–µ 3 –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã—Ö —Å–µ–≥–º–µ–Ω—Ç–∞
    print("\nüìÑ –ü–µ—Ä–≤—ã–µ 3 –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã—Ö —Å–µ–≥–º–µ–Ω—Ç–∞:")
    print("-" * 70)
    for seg in translation_segments[:3]:
        print(f"[{seg.start:6.1f}s - {seg.end:6.1f}s] {seg.text}")
    
    # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ
    print("\nüìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ:")
    print(f"   –û—Ä–∏–≥–∏–Ω–∞–ª —Å–ª–æ–≤: {word_count}")
    print(f"   –ü–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤: {len(translated_text.split())}")
    print(f"   –û—Ä–∏–≥–∏–Ω–∞–ª —Å–∏–º–≤–æ–ª–æ–≤: {len(original_text)}")
    print(f"   –ü–µ—Ä–µ–≤–æ–¥ —Å–∏–º–≤–æ–ª–æ–≤: {len(translated_text)}")

# ============================================================================
# –®–ê–ì 3: –°–û–ó–î–ê–ù–ò–ï –î–û–ö–£–ú–ï–ù–¢–û–í
# ============================================================================

if CREATE_DOCUMENTS:
    print("\n" + "=" * 70)
    print("üìÑ –®–ê–ì 3: –°–û–ó–î–ê–ù–ò–ï –î–û–ö–£–ú–ï–ù–¢–û–í")
    print("=" * 70)
    
    writer = DocumentWriter()
    
    # –ù–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞
    doc_title = f"TEST_{audio_path.stem}"
    
    print(f"–°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {doc_title}")
    
    docx_path, md_path = writer.create_from_segments(
        title=doc_title,
        transcription_segments=segments,
        translation_segments=translation_segments,
        transcribe_method=TRANSCRIBE_METHOD,
        translate_method=TRANSLATE_METHOD if translation_segments else "",
        with_timestamps=True
    )
    
    print(f"\n‚úÖ –î–æ–∫—É–º–µ–Ω—Ç—ã —Å–æ–∑–¥–∞–Ω—ã:")
    print(f"   üìó DOCX: {docx_path}")
    print(f"   üìò MD:   {md_path}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã
    print(f"\nüìè –†–∞–∑–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤:")
    print(f"   DOCX: {docx_path.stat().st_size / 1024:.1f} KB")
    print(f"   MD:   {md_path.stat().st_size / 1024:.1f} KB")

# ============================================================================
# –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢
# ============================================================================

print("\n" + "=" * 70)
print("‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
print("=" * 70)

print("\nüìã –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:")
print(f"   ‚úÖ –¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä–æ–≤–∞–Ω–æ —Å–µ–≥–º–µ–Ω—Ç–æ–≤: {len(segments)}")
if translation_segments:
    print(f"   ‚úÖ –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–æ —Å–µ–≥–º–µ–Ω—Ç–æ–≤: {len(translation_segments)}")
if CREATE_DOCUMENTS:
    print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: 2 (DOCX + MD)")

print("\nüéØ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
if CREATE_DOCUMENTS:
    print(f"   - –û—Ç–∫—Ä–æ–π—Ç–µ: {docx_path}")
    print(f"   - –ò–ª–∏:      {md_path}")

print("\n" + "=" * 70)